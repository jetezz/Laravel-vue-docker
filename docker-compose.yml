version: '3.9'
services:
  app:
    build:
      context: ./laravel-app
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - docker-network
    ports:
      - 9000:9000
    depends_on:
      - db

  queue-worker:
    build:
      context: ./laravel-app
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - docker-network
    depends_on:
      - db
    command: php artisan queue:work

  caddy:
    image: caddy:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./laravel-app:/var/www/html
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - docker-network
    depends_on:
      - app

  db:
    image: bitnami/postgresql:16.3.0
    platform: linux/amd64
    ports:
      - 5432:5432
    restart: always
    volumes:
      - db-data:/bitnami/postgresql
    environment:
      - POSTGRESQL_DATABASE=${DB_DATABASE}
      - POSTGRESQL_USERNAME=${DB_USERNAME}
      - POSTGRESQL_PASSWORD=${DB_PASSWORD}
    networks:
      - docker-network

  # db:
  #   image: mysql:8.0
  #   platform: linux/amd64
  #   ports:
  #     - 3307:3306
  #   restart: always
  #   volumes:
  #     - mysql-data:/var/lib/mysql
  #   environment:
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #   networks:
  #     - docker-network
      
  # db:
  #   image: mariadb
  #   environment:
  #     MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
  #     MYSQL_DATABASE: "${DB_DATABASE}"
  #     MYSQL_USER: "${DB_USERNAME}"
  #     MYSQL_PASSWORD: "${DB_PASSWORD}"
  #   ports:
  #     - "${DB_PORTMAP}:3306"   
  #   volumes:
  #     - ./.devcontainer/configfiles/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
  #     - ./database/importFiles:/docker-entrypoint-initdb.d

  redis:
    image: bitnami/redis:7.2
    platform: linux/amd64
    ports:
      - 6379:6379
    restart: always
    volumes:
      - redis-data:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    networks:
      - docker-network

volumes:
  db-data:
  redis-data:
  mysql-data:

networks:
  docker-network:
    driver: bridge
